% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{setGraphicOptions}
\alias{setGraphicOptions}
\title{Sets Graphic Options}
\usage{
setGraphicOptions(winNb=1, winSize= rbind(c(0,50,830,904), c(840,50,1672,904)), winSynchro=TRUE,
                  meshColor=rep("gray",2), meshAlpha=rep(1,2), meshShade=rep(TRUE,2),
                  meshPoints=c(FALSE,TRUE), meshWire=rep(FALSE,2),
                  PCplanesDraw=FALSE, PCplanesColor= "cyan", PCplanesAlpha=0.7,
                  intersectLines=TRUE, intersectPoints=FALSE, intersectColor="red",
                  spheresRad=0.02, spheresColor=matrix(c("black","blue"),2,2), spheresAlpha=1,
                  labelCex=2, labelColor="magenta", labelAdj=0.02,
                  zoomPercDist=0.15, zoomPtsDraw=TRUE, zoomPtsCol="orange", zoomSeeLm=FALSE)
}
\arguments{
\item{winNb}{A numeric value within \{\code{1},\code{2}\} setting for the number of grahical devices: \cr
- \code{1} (default) for a single device subdivided into 2 parts (one for the decimated mesh, the
  other for the zoomed mesh); \cr
- \code{2} for two separate devices.}

\item{winSize}{A vector or matrix indicating the size and positioning of graphical device(s): \cr
- a vector with 4 positive values indicating the left, top, right and bottom (in pixels, see the
  help for the \code{windowRect} parameter in \code{\link[rgl]{par3d}} for the device (when
  \code{winNb=1}); \cr
- a 2*4 matrix of positive values, each line indicating as before the left, top, right and bottom
  (in pixels) for each device (when \code{winNb=2}).}

\item{winSynchro}{A logical value indicating if user interaction (zoom, rotation) applied on a mesh should be
synchronously applied on the second one (decimated or full mesh). Only Works for \code{winNb=1}.
\cr
Default: \code{TRUE} for synchronization.}

\item{meshColor}{A character vector of length 1 or 2 indicating the color(s) for mesh plotting. Values for
\code{meshColor} should be taken from \code{\link[grDevices]{colors}}(). A 1-length vector will
apply the same color for full and decimated mesh, and a 2-length will apply the first color for
the decimated mesh and the second one for the full mesh. \cr
\strong{Note}: for the \code{meshShade} and the \code{meshWire} options, but not for the
               \code{meshPoints} option (see details after), this color won't overwrite the color
               stored in the \code{material$color} (if any) from the \code{mesh3d} object for
               plotting. This color will be used only if the \code{material$color} is \code{NULL}.
               \cr
Default: \code{rep("gray",2)} => both meshes in gray.}

\item{meshAlpha}{A character vector of length 1 or 2 indicating the alpha value(s) (transparency) for mesh
plotting. It will overwrite the alpha value stored in \code{material$alpha} (if any). Values for
\code{meshAlpha} should be taken within [0,1]. A 1-length vector will apply the same alpha for
full and decimated mesh, and a 2-length vector will apply the first alpha for the decimated mesh
and the second one for the full mesh. \cr
Default: \code{rep(1,2)} => both meshes totally opaque.}

\item{meshShade}{Logical vector of length 1 or 2 indicating if the meshes should be plotted or not via
\code{\link[rgl]{shade3d}}. \code{TRUE} value will use \code{\link[rgl]{shade3d}}, and
\code{FALSE} won't. A 1-length vector will apply the same value for both meshes and a 2-length
will apply the first value for decimated mesh, and the second one for full mesh. \cr
\strong{Note}: each mesh should be plotted through one of the 3 possible representations (
               \code{meshShade}, \code{meshPoints}, \code{meshWire}), meaning that at least one
               \code{TRUE} value in this parameter is needed for each mesh. If not filled,
               \code{meshShade} will be automatically set to \code{TRUE}. \cr
Default: \code{rep(TRUE,2)} to use \code{\link[rgl]{shade3d}} for both meshes.}

\item{meshPoints}{Identical to \code{meshShade} to plot the mesh using using \code{\link[rgl]{points3d}}. \cr
Default: \code{c(FALSE,TRUE)} to use \code{\link[rgl]{points3d}} only for the full mesh.}

\item{meshWire}{Identical to \code{meshShade} to plot the mesh using \code{\link[rgl]{wire3d}}. \cr
Default: \code{rep(FALSE,2)} to not use \code{\link[rgl]{wire3d}} for both meshes.}

\item{PCplanesDraw}{A 1-length logical or a character vector of length 1, 2 or 3 indicating if major planes (from
mesh principal components) as well as their intersections with the mesh should be plotted, and
interactively set by user before the landmark digitizing step. Possible settings: \cr
- \code{TRUE} (or \code{FALSE}): in this case all (or no one of) the 3 major planes will be (or
  won't be) plotted; \cr
- any combination of the values within \{\code{"pc1-pc2"},\code{"pc1-pc3"},\code{"pc2-pc3"}\}
  indicating which particular plane(s) should be plotted. \cr
Default: \code{FALSE} to not draw the planes and their intersections.}

\item{PCplanesColor}{A character vector taking values within \code{\link[grDevices]{colors}}() indicating with which
color each plane should be plotted. If only one value is given for more than one plane, the
color value is recycled. Otherwise, this vector should have the same length than the number of
plotted planes. \cr
Default: \code{"cyan"}.}

\item{PCplanesAlpha}{A numerical vector taking values within [0,1] indicating with which transparency (alpha value)
each plane should be plotted. If only one value is given for more than one plane, the alpha
value is recycled. Otherwise, this vector should have the same length than the number of
plotted planes. \cr
Default: \code{0.7}.}

\item{intersectLines}{A logical vector indicating for each intersection plane if the \code{\link[rgl]{lines3d}}
mode of representation should be use to figure the mesh/major plane intersection. If only one
value is given for more than one plane, the logical value is recycled. Otherwise, this vector
should have the same length than the number of plotted planes. \cr
\strong{Note 1}: each intersection should be plotted through one of the 2 possible
                 representations (\code{intersectLines},\code{intersectPoints}), meaning that
                 at least one \code{TRUE} value in this parameter is needed for each mesh. If
                 no, \code{intersectLines} will be automatically set to \code{TRUE}. \cr
\strong{Note 2}: for big meshes, the intersection plotting can be fasten by setting
                 \code{intersectLines} to \code{FALSE}. \cr
Default: \code{TRUE}.}

\item{intersectPoints}{Identical to \code{intersectLines} to plot the interstions using \code{\link[rgl]{points3d}}.
\cr
Default: \code{FALSE}.}

\item{intersectColor}{A character vector taking values within \code{\link[grDevices]{colors}}() indicating with
which color each intersection should be plotted. If only one value is given for more than one
plane, the color value is recycled. Otherwise, this vector should have the same length than
the number of plotted planes. \cr
Default: \code{"red"}.}

\item{spheresRad}{A numerical vector or matrix taking values within [0,1] indicating with which radius the spheres
figuring the landmarks should be plotted. Actually, the radius is expressed as a fraction of the
mesh dimensions(so better values are close to 0). Possible settings: \cr
- a 2*2 matrix, the 1st line corresponding to the setting before user validation and the 2nd one
  after, the 1st column correspondng to the setting for the decimated mesh and the second one for
  the zoomed full mesh; \cr
- a vector of length 2 corresponding to the setting before user validation and the 2nd one after
  (those values will be recycled for the full mesh); \cr
- a unique value for the setting before and after the user validation, and for the decimated and
  the full mesh. \cr
Default: \code{0.02}.}

\item{spheresColor}{A character vector or matrix taking values within \code{\link[grDevices]{colors}}() indicating
with which color the spheres figuring the landmarks should be plotted. See \code{spheresRad}
for possible settings. \cr
Default: \code{matrix(c("black","blue"),2,2)} to plot on both meshes spheres in black while the
         landmark has not been validated, and in blue after.}

\item{spheresAlpha}{A numerical vector or matrix taking values within [0,1] indicating with which transparency
(alpha value) the spheres figuring the landmarks should be plotted. See \code{spheresRad} for
possible settings. \cr
Default: \code{1} (no transparency for spheres).}

\item{labelCex}{A numerical vector or matrix taking positive values indicating with which size the landmark labels
should be plotted. See See \code{spheresRad} for possible settings. \cr
Default: \code{2}.}

\item{labelColor}{A character vector or matrix taking values within \code{\link[grDevices]{colors}}() indicating
with which color the landmark labels should be plotted. See spheresRad for possible settings. \cr
Default: "magenta".}

\item{labelAdj}{A numerical vector or matrix or array taking values within [0,1] indicating how to adjust the label
location relative to the landmark sphere. Possible settings: \cr
- a 2*2*2 array, the 1st line corresponding to the setting before user validation and the 2nd one
  after, the 1st column correspondng to the setting for the decimated mesh and the second one for
  the full mesh, the first slice corresponding to the horizontal adjustment and the second one to
  the vertical adjustment; \cr
- a 2*2 matrix corresonding to the slide for horizontal adjustment which will be recycled for
  vertical adjustment; \cr
- a vector of length 2 corresponding to the setting before user validation and the 2nd one after
  (those values will be recycled for the full mesh and the vertical adjustment); \cr
- a unique value for the setting before and after the user validation (recycled for the full mesh
   and the vertical adjustment). \cr
Default: \code{0.02}.}

\item{zoomPercDist}{A numerical value within [0,1] specifying the extent of the zoomed full mesh. This extent is
computed as the maximal distance between the clicked point and the mesh points multiplied by
\code{zoomPercDist}. \cr
Default: \code{0.15}.}

\item{zoomPtsDraw}{A logical value indicating if the exent of the zoomed mesh should be shown on the decimated mesh.
This extent will be represented as a 3D point cloud. \cr
Default: \code{TRUE}.}

\item{zoomPtsCol}{A character value taking values within \code{\link[grDevices]{colors}}() indicating with which
color the zoom extent (if \code{zoomPtsDraw} is set to \code{TRUE}) should be plotted. \cr
Default: \code{"orange"}.}

\item{zoomSeeLm}{A logical value indicating if the landmark placed by user on the decimated mesh should be visible
on the zoomed mesh. It will slightly fasten the process of the landmark digitizing enabling the
direct validation (without any manual change) of the placed landmark, but at the risk of a more or
less important approximation on the landmark positioning depending on the degree of decimation
used for the decimated mesh. \cr
Default: \code{FALSE}.}
}
\value{
A list of those parameters gathered in sublists following the thematic categorization described above.
}
\description{
Set graphic options for \code{\link{digitMesh.mesh3d()}} and \code{\link{digitMesh.character()}}.
}
\details{
This function allows user to set several parameters for graphical rendering for the landmark digitization
         process performed through the call of either \code{\link{digitMesh.mesh3d()}} or
         \code{\link{digitMesh.character()}}. With no arguments, this function returns the default settings for
         graphic options. Any of those options can be modified by setting new values for the corresponding
         arguments. Non-filled arguments will be set to default. Ill-filled arguments will return errors or
         warnings.

         The arguments for graphic options are categorized by themes, and concerns: \strong{window options},
         \strong{mesh rendering options}, \strong{major plane options}, \strong{mesh/major plane intersection
         options}, \strong{sphere options}, \strong{labelling options} and \strong{zoom options}.

         - the \strong{window options} allow to set the number of grahical devices (\code{winNb}), their size and
           positioning (\code{winSize}) and the synchronization or not between full and decimated meshes of the
           user action (rotation, zoom: \code{winSynchro});

         - the \strong{mesh rendering options} allow to play on mesh color (\code{meshColor}), its transparency
           (\code{meshAlpha}), its mode of representation (shading for \code{meshShade}, 3D points for
           \code{meshPoints}, 3D wire for \code{meshWire});

         - the \strong{major plane options} allow to perform or not the preliminary step of major plane adjustement
           before landmark digitization (\code{PCplanesDraw}), to set their color and transparency (
           \code{PCplanesColor}, \code{PCplanesAlpha});

         - the \strong{mesh/major plane intersection options} allow to set the mode of representation for the
           intersection lines among major planes and mesh (via 3D lines for \code{intersectLines} or 3D points
           for \code{intersectPoints}) and their color (code{intersectColor});

         - the \strong{sphere options} for landmark rendering allow to set their radius (\code{spheresRad}),
         their color (\code{spheresColor}), and their transparency (\code{spheresAlpha});

         - the \strong{labelling options} for landmark numbering allow to set their size (\code{labelCex}),
         their color (\code{labelColor}) and their adjustment relative to the sphere (\code{labelAdj});

         - the \strong{zoom options} allow to set the extent of the zoomed area (\code{zoomPercDist}), to project
           or not on the decimated mesh this extent (\code{zoomPtsDraw}) and to set its color (\code{zoomPtsCol}),
           and to display or not on the full mesh the landmark pre-positionned on the decimated mesh
           (\code{zoomSeeLm}).
}
\examples{
# returning default settings:
GrOpt<-setGraphicOptions()

# some possible settings (not exhaustive):
GrOpt<-setGraphicOptions(winNb=2, winSynchro= FALSE, PCplanesDraw=c("pc2-pc3"))
GrOpt<-setGraphicOptions(meshColor=c("gray","orange"), meshPoints=FALSE, zoomSeeLm=TRUE)
#...

}
\seealso{
\code{\link{setDecimOptions}}, \code{\link{setFileOptions}}, \code{\link{setTemplOptions}}.
}
